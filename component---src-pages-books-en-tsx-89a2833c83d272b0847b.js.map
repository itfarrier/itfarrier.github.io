{"version":3,"sources":["webpack:///./src/pages/books.en.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/data/messages/en.js","webpack:///./src/data/messages/ru.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SelectLanguage/index.ts","webpack:///./src/components/SelectLanguage/SelectLanguage.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts","webpack:///./src/assets/documents/cv-podabed.pdf","webpack:///./src/data/messages sync ^\\.\\/.*$"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","Books","props","location","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","description","keywords","title","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SelectLanguage","langsMenu","toggleLanguage","links","map","lang","react","key","langKey","onClick","navigate","link","Header","_props$context","context","isDark","language","toggleDark","homeLink","theme","Helmet_default","htmlAttributes","components_SelectLanguage","role","gatsby_browser_entry","to","href","cv","addLocaleData","concat","en","ru","Layout","_staticQueryData$data","_1624542009","site","siteMetadata","_staticQueryData$data2","languages","defaultLangKey","langs","getCurrentLangKey","getLangs","getUrlForLang","i18nMessages","index_es","locale","messages","Context","size","rel","sizes","type","sizesInPx","generateAppleTouch","generateFavicon","color","content","name","components_Header","p","./en","./en.js","./ru","./ru.js","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve"],"mappings":"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","file":"component---src-pages-books-en-tsx-89a2833c83d272b0847b.js","sourcesContent":["import * as React from 'react';\n\nimport Layout from '../components/Layout';\n\nconst Books: React.FC = (props) => (\n  <Layout location={props.location}>\n    <article>\n      <section>\n        <header>\n          <h1>Одолел:</h1>\n        </header>\n        <ul>\n          <li>\n            Олег Юрьевич Тиньков — «Я такой как все» (2015). Пиздит. Нихуя не такой. Тогда бы все\n            были с состоянием 1,7 млрд. баксов.\n          </li>\n          <li>Олег Юрьевич Тиньков — «Как стать бизнесменом» (2012). Понравилось.</li>\n          <li>\n            Досси Истон — «Этика блядства» (2007). Опять ебучая психология с дивана (это я про\n            анализ поведения героев), но в общем согласен с основной мыслью.\n          </li>\n          <li>\n            Сергей Викторович Яров — «Повседневная жизнь блокадного Ленинграда» (2013). Очень много\n            рассуждений, анализов, отношения автора к документам. Не понравилось.\n          </li>\n          <li>\n            Лидия Алексеевна Невзорова — «Теория и практика школьной расчистки» (2010). не согласен,\n            что «кованые НЕ МОГУТ быть здоровы». Ковалю следует это прочесть, чтобы знать врага в\n            лицо. В книге много красочных подробных фотоиллюстраций. И много ПАФОСА: Школа, Теория\n            Школьной Расчистки, Метод Школы… Тьфу.\n          </li>\n          <li>\n            Лидия Алексеевна Невзорова — «Как достичь баланса» (2009). Аналогично. Пафос, ковка —\n            зло. Но про баланс рассказано заебись: поймёт любой. <del>Даже я.</del>\n          </li>\n          <li>\n            Алексей Петрович Ермолов — «Записки русского генерала» (2014). Очень интересно. Весьма\n            деликатно описаны ужасы войны: «с потерею двух человек вырезано до 400 душ всякого\n            возраста и обоего пола». Присутствует и критика Ермолова от современников, что не делает\n            его образ таким идеальным.\n          </li>\n          <li>\n            Дин Маклафлин — «Ястреб среди воробьёв» (1992). Ненавязчивый фантастический рассказ про\n            оружие будущего против оружия прошлого. Основная мысль: «Всему своё время».\n          </li>\n          <li>\n            Сергей Донатович Довлатов — «Заповедник» (2016). Венечка не в поезде. И никаких\n            рецептов.\n          </li>\n          <li>\n            Сергей Донатович Довлатов — «Зона: Записки надзирателя» (1982). Скука. Написано про\n            людей, а не про зону. Но всё равно прочёл.\n          </li>\n          <li>\n            Антон Викторович Кротов — «Практика вольных путешествий» (2015). Очень полезная книга не\n            только для автостопщика, но и для любого человека, интересно написанная.\n          </li>\n          <li>Анджей Сапковский — «Ведьмак». Интересно. В игру не играл.</li>\n        </ul>\n      </section>\n      <section>\n        <header>\n          <h1>Бросил на полпути:</h1>\n        </header>\n        <ul>\n          <li>\n            Андрей Андреевич Громыко — «Памятное» (1988). Одолел один том. Очень интересно, да уж\n            больно скучно. Как Библия. Я про советских политиков думал, как Новосельцев: «…вы\n            сухарь!…В вас нет ничего человеческого!…В вас нет сердца, потому что у вас одни цифры и\n            отчёты…». Эта книга показала мне, что хотя бы Громыко был очень интересным человеком.\n          </li>\n          <li>Томас Метцингер — «Туннель эго». Устал на 21 странице, слишком для меня сложно.</li>\n        </ul>\n      </section>\n    </article>\n  </Layout>\n);\n\nexport default Books;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n  description: 'IT farrier',\n  keywords: [''],\n  title: 'podabed.org',\n};\n","module.exports = {\n  description: 'IT коваль',\n  keywords: [''],\n  title: 'podabed.org',\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import SelectLanguage from './SelectLanguage';\n\nexport default SelectLanguage;\n","import { navigate } from 'gatsby';\nimport * as React from 'react';\n\nimport { ILangObject } from '../../interfaces';\n\nconst SelectLanguage: React.FC = (props: any): React.ReactElement => {\n  const { langsMenu, toggleLanguage } = props;\n\n  const links: React.ReactElement[] = langsMenu.map(\n    (lang: ILangObject): React.ReactElement => {\n      const onClick: () => void = (): void => {\n        toggleLanguage(lang.langKey);\n        navigate(lang.link);\n      };\n\n      return (\n        <button key={lang.langKey} onClick={onClick}>\n          {lang.langKey}\n        </button>\n      );\n    },\n  );\n\n  return <>{links}</>;\n};\n\nexport default SelectLanguage;\n","import Header from './Header';\n\nexport default Header;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport cv from '../../assets/documents/cv-podabed.pdf';\nimport SelectLanguage from '../SelectLanguage';\n\nconst Header: React.FC = (props: any): React.ReactElement => {\n  const {\n    context: { isDark, language, toggleDark, toggleLanguage },\n    homeLink,\n    langsMenu,\n  } = props;\n\n  const theme = isDark ? 'dark' : 'light';\n\n  return (\n    <header>\n      <Helmet htmlAttributes={{ theme }} />\n      <nav>\n        <button onClick={toggleDark}>{theme}</button>\n        <SelectLanguage langsMenu={langsMenu} language={language} toggleLanguage={toggleLanguage} />\n      </nav>\n      <nav role={'navigation'}>\n        <ul>\n          <li>\n            <Link role={'link'} to={homeLink}>\n              /\n            </Link>\n          </li>\n          <li>\n            <a href={cv} role={'link'}>\n              /cv\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport 'intl';\nimport 'intl/locale-data/jsonp/en';\nimport 'intl/locale-data/jsonp/ru';\nimport { getCurrentLangKey, getLangs, getUrlForLang, isHomePage } from 'ptz-i18n';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { addLocaleData, FormattedMessage, IntlProvider } from 'react-intl';\nimport * as en from 'react-intl/locale-data/en';\nimport * as ru from 'react-intl/locale-data/ru';\n\nimport { ILangObject } from '../../interfaces';\nimport Context from '../Context';\nimport Header from '../Header';\n\naddLocaleData([...en, ...ru]);\n\nconst Layout: React.FC = (props: any): React.ReactElement => {\n  const {\n    children,\n    location: { pathname },\n  } = props;\n\n  const {\n    site: {\n      siteMetadata: {\n        languages: { defaultLangKey, langs },\n        title,\n      },\n    },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          languages {\n            defaultLangKey\n            langs\n          }\n          title\n        }\n      }\n    }\n  `);\n\n  const langKey: string = getCurrentLangKey(langs, defaultLangKey, pathname);\n  const homeLink: string = `/${langKey}/`;\n  const langsMenu: ILangObject[] = getLangs(langs, langKey, getUrlForLang(homeLink, pathname));\n  const i18nMessages: { [key: string]: string } = require(`../../data/messages/${langKey}`);\n  const generateAndroidChrome = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/android-chrome-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n  const generateAppleTouch = (sizesInPx: number[]): React.ReactElement[][] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement[] => [\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}.png`}\n          key={`1${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n        <link\n          href={`/favicons/apple-touch-icon-${size}x${size}-precomposed.png`}\n          key={`2${size}`}\n          rel={'apple-touch-icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />,\n      ],\n    );\n  };\n  const generateFavicon = (sizesInPx: number[]): React.ReactElement[] => {\n    return sizesInPx.map(\n      (size: number): React.ReactElement => (\n        <link\n          href={`/favicons/favicon-${size}x${size}.png`}\n          key={size}\n          rel={'icon'}\n          sizes={`${size}x${size}`}\n          type={'image/png'}\n        />\n      ),\n    );\n  };\n\n  return (\n    <IntlProvider locale={langKey} messages={i18nMessages}>\n      <Context.Consumer>\n        {(context) => (\n          <>\n            <Helmet title={title}>\n              {generateAndroidChrome([36, 48, 72, 96, 144, 192, 256, 384, 512])}\n              <link\n                href={'/favicons/apple-touch-icon.png'}\n                rel={'apple-touch-icon'}\n                sizes={'180x180'}\n                type={'image/png'}\n              />\n              <link\n                href={'/favicons/apple-touch-icon-precomposed.png'}\n                rel={'apple-touch-icon'}\n                sizes={'180x180'}\n                type={'image/png'}\n              />\n              {generateAppleTouch([57, 60, 72, 76, 114, 120, 144, 152, 180])}\n              {generateFavicon([16, 32])}\n              <link color={'#000'} href={'/favicons/safari-pinned-tab.svg'} rel={'mask-icon'} />\n              <link href={'/favicons/favicon.ico'} rel={'shortcut icon'} />\n              <meta content={i18nMessages.description} name={'description'} />\n              <meta content={i18nMessages.keywords} name={'keywords'} />\n              <meta content={i18nMessages.title} name={'apple-mobile-web-app-title'} />\n              <meta content={i18nMessages.title} name={'application-name'} />\n              <meta content={'#fff'} name={'msapplication-TileColor'} />\n              <meta content={'/favicons/mstile-144x144.png'} name={'msapplication-TileImage'} />\n              <meta content={'/favicons/browserconfig.xml'} name={'msapplication-config'} />\n              <meta content={'#fff'} name={'theme-color'} />\n              <meta content={'black-translucent'} name={'apple-mobile-web-app-status-bar-style'} />\n            </Helmet>\n            <Header\n              context={context}\n              homeLink={homeLink}\n              langsMenu={langsMenu}\n              locale={langKey}\n              pathname={pathname}\n            />\n            <main>{children}</main>\n          </>\n        )}\n      </Context.Consumer>\n    </IntlProvider>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","module.exports = __webpack_public_path__ + \"static/cv-podabed-307897761bee592fbd2c523f6b440e84.pdf\";","var map = {\n\t\"./en\": 182,\n\t\"./en.js\": 182,\n\t\"./ru\": 183,\n\t\"./ru.js\": 183\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 188;"],"sourceRoot":""}