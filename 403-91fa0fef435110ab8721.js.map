{"version":3,"file":"403-91fa0fef435110ab8721.js","mappings":"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","sources":["webpack://itfarrier/./src/components/BitTorrentVisualization/sketch.ts","webpack://itfarrier/./src/components/BitTorrentVisualization/index.tsx"],"sourcesContent":["import type p5 from 'p5';\n\nexport const sketch = (p5: p5) => {\n  class Bit {\n    bitHue: number;\n    id: number;\n\n    constructor(id: number, bitHue: number) {\n      this.bitHue = bitHue;\n      this.id = id;\n    }\n  }\n\n  class Connection {\n    deadKibbles = 0;\n    from: Peer;\n    kibbles: Kibble[] = [];\n    lastDraw = p5.millis();\n    speed = p5.random(0, 100);\n    stream = true;\n    theBit: Bit;\n    to: Peer;\n\n    constructor(from: Connection['from'], to: Connection['to'], bit: Connection['theBit']) {\n      this.from = from;\n      this.theBit = bit;\n      this.to = to;\n    }\n\n    createKibble() {\n      const kibble = new Kibble();\n\n      this.kibbles.push(kibble);\n      this.lastDraw = p5.millis();\n    }\n\n    drawKibbles() {\n      this.kibbles.forEach((kibble, index) => {\n        if (p5.millis() > kibble.endTime) {\n          this.kibbles.splice(index, 1);\n          this.deadKibbles++;\n        } else {\n          const diff = (p5.millis() - kibble.startTime) / (kibble.endTime - kibble.startTime);\n          const xpos = this.from.cxpos * (1 - diff) + this.to.cxpos * diff;\n          const ypos = this.from.cypos * (1 - diff) + this.to.cypos * diff;\n\n          p5.colorMode(p5.HSB);\n          p5.fill(this.theBit.bitHue, 255, 255);\n          p5.stroke(this.theBit.bitHue, 255, 255);\n          p5.circle(xpos, ypos, kibble.big);\n        }\n      });\n    }\n\n    manageKibbles() {\n      if (this.from.removing >= 1 || this.to.removing >= 1 || this.deadKibbles > 125) {\n        this.stream = false;\n      } else {\n        if (this.lastDraw < p5.millis() - this.speed) {\n          this.createKibble();\n        }\n      }\n    }\n  }\n\n  class Kibble {\n    big = p5.random(0, 4);\n    endTime: number;\n    startTime: number;\n\n    constructor() {\n      const startTime = p5.millis();\n\n      this.endTime = startTime + 5000;\n      this.startTime = startTime;\n    }\n  }\n\n  class Torrent {\n    bits: Bit[] = [];\n\n    constructor(totbits: number) {\n      for (let i = 0; i < totbits; i++) {\n        const ll = (255 / totbits) * i;\n        const k = new Bit(i, ll);\n\n        this.bits.push(k);\n      }\n    }\n  }\n\n  const INITIAL_PEERS = 5;\n  const INITIAL_SEEDS = 1;\n  const connections: Connection[] = [];\n  const peers: Peer[] = [];\n  const testTorrent = new Torrent(30);\n  let isRotatePeers = -1;\n\n  class Peer {\n    actBits: Bit[] = [];\n    ccolor: p5.Color;\n    chue = 0;\n    cxpos = 0; // x of where peer should be\n    cypos = 0; // y of where peer should be\n    ehue = 0;\n    emovetime: number;\n    expos: number;\n    eypos: number;\n    index = 0;\n    knex: (Bit | Peer)[] = [];\n    lastcheck = p5.millis();\n    myBits: Bit[] = [];\n    needBits: Bit[] = [];\n    percent = p5.random(0, 1);\n    pwait = p5.random(1, 9) * 1000;\n    removing = 0;\n    shue = 0;\n    smovetime = p5.millis();\n    sxpos = 0; // x of peer\n    sypos = 0; // y of peer\n\n    constructor() {\n      let szv = peers.length;\n\n      if (szv === 0) {\n        szv++;\n      }\n\n      p5.push();\n      p5.translate(p5.width / 2, p5.height / 2);\n      p5.ellipseMode(p5.CENTER);\n\n      const angle = 3;\n\n      p5.rotate(p5.radians(angle));\n\n      this.expos = p5.width / 2 + 230 * p5.cos(p5.radians(angle));\n      this.eypos = p5.height / 2 + 230 * p5.sin(p5.radians(angle));\n      this.emovetime = this.smovetime + 1250;\n\n      p5.colorMode(p5.HSB);\n\n      this.ccolor = p5.color(this.chue, p5.random(0, 255), p5.random(0, 255));\n\n      p5.pop();\n\n      this.setupBits();\n    }\n\n    bitRequest(peer: Peer, needBit: Bit) {\n      if (peer.knex.length < 4) {\n        const mz = new Connection(peer, this, needBit);\n\n        peer.knex.push(this);\n\n        this.actBits.push(needBit);\n\n        connections.push(mz);\n      }\n    }\n\n    drawSelf() {\n      p5.fill(this.ccolor);\n      p5.stroke(this.myBits.length);\n      p5.noStroke();\n      p5.ellipseMode(p5.CENTER);\n      p5.circle(this.cxpos, this.cypos, 50);\n      p5.fill(0);\n\n      const w = testTorrent.bits.length - 1;\n\n      p5.rect(this.cxpos - w / 2, this.cypos - 5, w, 10);\n\n      this.myBits.forEach((myBit) => {\n        p5.colorMode(p5.HSB);\n        p5.fill(myBit.bitHue, 255, 255);\n        p5.stroke(myBit.bitHue, 255, 255);\n\n        const someCoordinate = this.cxpos - w / 2 + myBit.id;\n\n        p5.line(someCoordinate, this.cypos - 5, someCoordinate, this.cypos + 5);\n      });\n    }\n\n    findPeer() {\n      this.needBits.forEach((needBit) => {\n        this.needBits = p5.shuffle(this.needBits) as Bit[];\n\n        peers.forEach((peer) => {\n          if (\n            peer.myBits.includes(needBit) &&\n            !(peer.removing > 0) &&\n            !(this.removing > 0) &&\n            !peer.knex.includes(this) &&\n            peer.index !== this.index &&\n            !this.actBits.includes(needBit)\n          ) {\n            this.bitRequest(peer, needBit);\n          }\n        });\n      });\n    }\n\n    moveSelf() {\n      if (p5.millis() > this.emovetime) {\n        this.cxpos = this.expos;\n        this.cypos = this.eypos;\n        this.chue = this.ehue;\n      } else {\n        const diff = (p5.millis() - this.smovetime) / (this.emovetime - this.smovetime);\n\n        this.cxpos = this.sxpos * (1 - diff) + this.expos * diff;\n        this.cypos = this.sypos * (1 - diff) + this.eypos * diff;\n        this.chue = this.shue * (1 - diff) + this.ehue * diff;\n      }\n    }\n\n    reConfigure(i: number) {\n      let k;\n\n      p5.push();\n      p5.translate(p5.width / 2, p5.height / 2);\n      p5.ellipseMode(p5.CENTER);\n\n      if (peers.length == 0) {\n        k = 1;\n      } else {\n        k = peers.length;\n      }\n\n      this.index = i;\n\n      const angle = (360 / k) * i + isRotatePeers;\n\n      p5.rotate(p5.radians(angle));\n\n      this.sxpos = this.cxpos;\n      this.sypos = this.cypos;\n      this.expos = (p5.width / 4) * p5.cos(p5.radians(angle)); // screenX(0, 180, 0);\n      this.eypos = (p5.height / 4) * p5.sin(p5.radians(angle)); // screenY(0, 180, 0);\n      this.smovetime = p5.millis();\n      this.emovetime = this.smovetime + 3000;\n\n      p5.pop();\n\n      this.shue = this.chue;\n      this.ehue = (255 / peers.length - 1) * i;\n      this.ccolor = p5.color(this.chue, 255, 255, 133);\n    }\n\n    setupBits() {\n      testTorrent.bits.forEach((bit) => {\n        if (!this.myBits.includes(bit)) {\n          this.needBits.push(bit);\n        }\n      });\n    }\n  }\n\n  function addPeer() {\n    peers.push(new Peer());\n  }\n\n  function addSeed() {\n    const peer = new Peer();\n\n    peers.push(peer);\n\n    testTorrent.bits.forEach((bit) => {\n      peer.myBits.push(bit);\n    });\n\n    peer.needBits = [];\n  }\n\n  function removeRandomPeer() {\n    (p5.random(peers) as Peer).removing = 1;\n  }\n\n  p5.keyPressed = () => {\n    if (p5.key === 'p') {\n      addPeer();\n    }\n\n    if (p5.key === 's') {\n      addSeed();\n    }\n\n    if (p5.key === 'r' || p5.keyCode === p5.DELETE || p5.keyCode === p5.BACKSPACE) {\n      removeRandomPeer();\n    }\n  };\n\n  p5.setup = () => {\n    const size = p5.windowWidth > p5.windowHeight ? p5.windowHeight : p5.windowWidth;\n\n    p5.createCanvas(size, size, p5.WEBGL);\n    p5.textAlign(p5.CENTER);\n\n    for (let i = 0; i < INITIAL_SEEDS; i++) {\n      addSeed();\n    }\n\n    for (let i = 0; i < INITIAL_PEERS; i++) {\n      addPeer();\n    }\n  };\n\n  p5.draw = () => {\n    p5.background(0, 0);\n\n    if (isRotatePeers >= 0) {\n      if (isRotatePeers < 360) {\n        isRotatePeers += 0.2;\n      } else {\n        isRotatePeers = isRotatePeers - 360;\n      }\n    }\n\n    connections.forEach((connection, index) => {\n      connection.manageKibbles();\n      connection.drawKibbles();\n\n      if (!connection.kibbles.length && !connection.stream) {\n        if (connection.to.removing >= 1) {\n          connection.to.removing++;\n        }\n\n        if (connection.from.removing >= 1) {\n          connection.from.removing++;\n        }\n\n        connection.from.knex.splice(connection.from.knex.indexOf(connection.to), 1);\n        connection.to.myBits.push(connection.theBit);\n\n        if (connection.to.needBits.includes(connection.theBit)) {\n          connection.to.needBits.splice(connection.to.needBits.indexOf(connection.theBit), 1);\n        }\n\n        if (connection.to.knex.includes(connection.theBit)) {\n          connection.to.knex.splice(connection.to.knex.indexOf(connection.theBit), 1);\n        }\n\n        connections.splice(index, 1);\n      }\n    });\n\n    peers.forEach((peer, index) => {\n      peer.moveSelf();\n      peer.drawSelf();\n      peer.reConfigure(index);\n\n      if (peer.removing > 1) {\n        peers.splice(index, 1);\n      }\n    });\n\n    p5.shuffle(peers).forEach((peer: Peer) => {\n      if (peer.lastcheck < p5.millis() - peer.pwait) {\n        peer.findPeer();\n        peer.lastcheck = p5.millis();\n      }\n    });\n  };\n};\n","import { type P5WrapperProps, ReactP5Wrapper } from '@p5-wrapper/react';\nimport { sketch } from 'cmpts/BitTorrentVisualization/sketch';\nimport { type DetailedHTMLProps, type HTMLAttributes } from 'react';\n\nexport interface BitTorrentVisualizationProps {\n  fallback: P5WrapperProps['fallback'];\n  footerText: DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>['children'];\n}\n\nconst BitTorrentVisualization = ({ fallback, footerText }: BitTorrentVisualizationProps) => {\n  return (\n    <div\n      style={{\n        alignItems: 'center',\n        display: 'flex',\n        height: '100%',\n        justifyContent: 'center',\n        left: 0,\n        position: 'absolute',\n        top: 0,\n        width: '100%',\n        zIndex: -1,\n      }}\n    >\n      <ReactP5Wrapper fallback={fallback} sketch={sketch} />\n      <span style={{ bottom: '1rem', position: 'absolute', right: '1rem' }}>{footerText}</span>\n    </div>\n  );\n};\n\nexport default BitTorrentVisualization;\n"],"names":["sketch","p5","Bit","id","bitHue","this","Connection","from","to","bit","deadKibbles","kibbles","lastDraw","millis","speed","random","stream","theBit","_proto","prototype","createKibble","kibble","Kibble","push","drawKibbles","forEach","index","endTime","splice","diff","startTime","xpos","cxpos","ypos","cypos","colorMode","HSB","fill","stroke","circle","big","manageKibbles","removing","connections","peers","testTorrent","totbits","bits","i","k","isRotatePeers","Peer","actBits","chue","ehue","knex","lastcheck","myBits","needBits","percent","pwait","shue","smovetime","sxpos","sypos","szv","length","translate","width","height","ellipseMode","CENTER","rotate","radians","expos","cos","eypos","sin","emovetime","ccolor","color","pop","setupBits","_proto2","bitRequest","peer","needBit","mz","drawSelf","noStroke","w","rect","myBit","someCoordinate","line","findPeer","shuffle","includes","moveSelf","reConfigure","angle","addPeer","addSeed","keyPressed","key","keyCode","DELETE","BACKSPACE","setup","size","windowWidth","windowHeight","createCanvas","WEBGL","textAlign","draw","background","connection","indexOf","_ref","fallback","footerText","_jsxs","style","alignItems","display","justifyContent","left","position","top","zIndex","children","_jsx","ReactP5Wrapper","bottom","right"],"sourceRoot":""}