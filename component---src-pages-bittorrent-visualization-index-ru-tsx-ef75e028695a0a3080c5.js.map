{"version":3,"file":"component---src-pages-bittorrent-visualization-index-ru-tsx-ef75e028695a0a3080c5.js","mappings":"kKAGA,MAAMA,GAAoCC,EAAAA,EAAAA,OAAK,IAAM,wDAQxCC,EAAoCC,IAIP,IAJQ,gCAChDC,EAA+B,iBAC/BC,EAAgB,kCAChBC,GACkCH,EAClC,MAAMI,EAA0B,oBAAXC,OAErB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIJ,IACAE,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,CAACC,UAAUJ,EAAAA,EAAAA,KAAA,QAAAE,SAAON,IAAyBM,UAClDF,EAAAA,EAAAA,KAACT,EAAiC,CAChCa,SAAUT,EACVU,WAAYR,OAIjB,C,kFCCP,UAvBgCS,KAC9B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAc,aAU3B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAAR,SAAA,EACLF,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACC,MAAQ,GAAEL,EAAKM,KAAKC,aAAaF,qCACzCZ,EAAAA,EAAAA,KAACP,EAAAA,EAAiC,CAChCE,iCAAiCK,EAAAA,EAAAA,KAAA,MAAAE,SAAK,oCACtCN,kBAAkBI,EAAAA,EAAAA,KAAA,MAAAE,SAAK,4CACvBG,WAAY,+CAEP,C","sources":["webpack://itfarrier/./src/components/SSRGuardedBitTorrentVisualization/index.tsx","webpack://itfarrier/./src/pages/bittorrent-visualization/index.ru.tsx"],"sourcesContent":["import { type BitTorrentVisualizationProps } from 'cmpts/BitTorrentVisualization';\nimport { lazy, Suspense, type SuspenseProps } from 'react';\n\nconst LazyLoadedBitTorrentVisualization = lazy(() => import('cmpts/BitTorrentVisualization'));\n\nexport interface SSRGuardedBitTorrentVisualization {\n  fallbackBitTorrentVisualization: BitTorrentVisualizationProps['fallback'];\n  fallbackSuspense: SuspenseProps['fallback'];\n  footerTextBitTorrentVisualization: BitTorrentVisualizationProps['footerText'];\n}\n\nexport const SSRGuardedBitTorrentVisualization = ({\n  fallbackBitTorrentVisualization,\n  fallbackSuspense,\n  footerTextBitTorrentVisualization,\n}: SSRGuardedBitTorrentVisualization) => {\n  const isSSR = typeof window === 'undefined';\n\n  return (\n    <>\n      {!isSSR && (\n        <Suspense fallback={<span>{fallbackSuspense}</span>}>\n          <LazyLoadedBitTorrentVisualization\n            fallback={fallbackBitTorrentVisualization}\n            footerText={footerTextBitTorrentVisualization}\n          />\n        </Suspense>\n      )}\n    </>\n  );\n};\n","import { Layout } from 'cmpts/Layout';\nimport { SSRGuardedBitTorrentVisualization } from 'cmpts/SSRGuardedBitTorrentVisualization';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { type BittorrentVisualizationRuQuery } from 'root/graphql-types';\n\nconst BittorrentVisualization = () => {\n  const data = useStaticQuery<BittorrentVisualizationRuQuery>(graphql`\n    query BittorrentVisualizationRu {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout>\n      <Helmet title={`${data.site.siteMetadata.title} — BitTorrent Визуализация`} />\n      <SSRGuardedBitTorrentVisualization\n        fallbackBitTorrentVisualization={<h1>{'BitTorrent скетч не загрузился.'}</h1>}\n        fallbackSuspense={<h1>{'BitTorrent визуализация не загрузилась.'}</h1>}\n        footerText={'Утащил с https://newroman.net/bittorrent'}\n      />\n    </Layout>\n  );\n};\n\nexport default BittorrentVisualization;\n"],"names":["LazyLoadedBitTorrentVisualization","lazy","SSRGuardedBitTorrentVisualization","_ref","fallbackBitTorrentVisualization","fallbackSuspense","footerTextBitTorrentVisualization","isSSR","window","_jsx","_Fragment","children","Suspense","fallback","footerText","BittorrentVisualization","data","useStaticQuery","_jsxs","Layout","Helmet","title","site","siteMetadata"],"sourceRoot":""}